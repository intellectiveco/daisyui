.tooltip {
  @apply relative inline-block;
  --tt-bg: var(--color-neutral);
  --tt-off: calc(100% + 0.5rem);
  --tt-tail: calc(100% + 1px + 0.25rem);

  > :where(.tooltip-content),
  &[data-tip]:before {
    @apply text-neutral-content rounded-field absolute max-w-[20rem] px-2 py-1 text-center whitespace-normal opacity-0;
    font-size: calc(0.875 * var(--font-size-basis, 1rem));
    line-height: 1.25em;
    transition:
      opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms,
      transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
    background-color: var(--tt-bg);
    width: max-content;
    pointer-events: none;
    z-index: 1;
    --tw-content: attr(data-tip);
    content: var(--tw-content);
  }

  &:after {
    @apply absolute opacity-0;
    background-color: var(--tt-bg);
    transition:
      opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms,
      transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
    content: "";
    pointer-events: none;
    width: calc(0.625 * var(--rem-basis, 1rem));
    height: calc(0.25 * var(--rem-basis, 1rem));
    display: block;
    position: absolute;
    mask-repeat: no-repeat;
    mask-position: -1px 0;
    mask-image: var(--mask-tooltip);
  }
}

.tooltip,
.tooltip-top {
  > .tooltip-content,
  &[data-tip]:before {
    transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
    inset: auto auto var(--tt-off) 50%;
  }
}

.tooltip-bottom {
  > .tooltip-content,
  &[data-tip]:before {
    transform: translateX(-50%) translateY(var(--tt-pos, -0.25rem));
    inset: var(--tt-off) auto auto 50%;
  }
}

.tooltip-left {
  > .tooltip-content,
  &[data-tip]:before {
    transform: translateX(calc(var(--tt-pos, 0.25rem) - 0.25rem)) translateY(-50%);
    inset: 50% var(--tt-off) auto auto;
  }
}

.tooltip-right {
  > .tooltip-content,
  &[data-tip]:before {
    transform: translateX(calc(var(--tt-pos, -0.25rem) + 0.25rem)) translateY(-50%);
    inset: 50% auto auto var(--tt-off);
  }
}

.tooltip {
  &.tooltip-open,
  &[data-tip]:hover,
  &:hover,
  &:has(:focus-visible) {
    > .tooltip-content,
    &[data-tip]:before,
    &:after {
      @apply opacity-100;
      --tt-pos: calc(0 * var(--rem-basis, 1rem));
      transition:
        opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s,
        transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    }
  }
}

.tooltip,
.tooltip-top {
  &:after {
    transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
    inset: auto auto var(--tt-tail) 50%;
  }
}

.tooltip-bottom {
  &:after {
    transform: translateX(-50%) translateY(var(--tt-pos, -0.25rem)) rotate(180deg);
    inset: var(--tt-tail) auto auto 50%;
  }
}

.tooltip-left {
  &:after {
    transform: translateX(var(--tt-pos, 0.25rem)) translateY(-50%) rotate(-90deg);
    inset: 50% calc(var(--tt-tail) + 1px) auto auto;
  }
}

.tooltip-right {
  &:after {
    transform: translateX(var(--tt-pos, -0.25rem)) translateY(-50%) rotate(90deg);
    inset: 50% auto auto calc(var(--tt-tail) + 1px);
  }
}

.tooltip-primary {
  --tt-bg: var(--color-primary);

  > .tooltip-content,
  &[data-tip]:before {
    @apply text-primary-content;
  }
}

.tooltip-secondary {
  --tt-bg: var(--color-secondary);

  > .tooltip-content,
  &[data-tip]:before {
    @apply text-secondary-content;
  }
}

.tooltip-accent {
  --tt-bg: var(--color-accent);

  > .tooltip-content,
  &[data-tip]:before {
    @apply text-accent-content;
  }
}

.tooltip-info {
  --tt-bg: var(--color-info);

  > .tooltip-content,
  &[data-tip]:before {
    @apply text-info-content;
  }
}

.tooltip-success {
  --tt-bg: var(--color-success);

  > .tooltip-content,
  &[data-tip]:before {
    @apply text-success-content;
  }
}

.tooltip-warning {
  --tt-bg: var(--color-warning);

  > .tooltip-content,
  &[data-tip]:before {
    @apply text-warning-content;
  }
}

.tooltip-error {
  --tt-bg: var(--color-error);

  > .tooltip-content,
  &[data-tip]:before {
    @apply text-error-content;
  }
}
